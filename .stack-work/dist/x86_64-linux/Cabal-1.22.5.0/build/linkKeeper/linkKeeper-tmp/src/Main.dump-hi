
==================== FINAL INTERFACE ====================
2017-01-04 05:55:33.317162 UTC

interface main@main:Main 7103
  interface hash: e83726403c3e9720378d1a5bdb6c911a
  ABI hash: 02f5584664453880509e494b8721822c
  export-list hash: 8215a418846fb9d4aeb1374a2ad0a67c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 2f5414a8cb0d8153b4a0122e5a9c433f
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.add
  Main.addLnNums
  Main.deleteAt
  Main.dispatch
  Main.fileName
  Main.list
  Main.main
  Main.open
  Main.remove
module dependencies:
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0* deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm*
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.IO bb5b81adcea33b14bd4abe16d7dde45f
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.Environment ba6e36000c8274703cf7786fbe8d0f6c
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm:System.Directory a1cb5f7691abbe7dfb17405086904f1c
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ:System.Process 8f5da958699421ce933a2006dea644fe
cac2c9348ecc3c39129cc3a7f1d0967a
  $wa ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,A>b, Inline: [0] -}
7d47f5de48232afec5ae1e78acbc928d
  $wa1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,A>b, Inline: [0] -}
fee13f23264954d596268462f6a38c42
  $wa2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,A>b, Inline: [0] -}
f08f6649fc4df8b210deec1f34fb9869
  $wdeleteAt :: GHC.Prim.Int# -> [a] -> [a]
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
2bb4b146f90b5df5f62cf9ad6f2bddf3
  add :: [[GHC.Types.Char]] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.add1
                  `cast`
                (<[[GHC.Types.Char]]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
da0256694c138e205e72257d929d759c
  add1 ::
    [[GHC.Types.Char]]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ ds :: [[GHC.Types.Char]]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds of wild {
                   [] -> Main.$wa eta
                   : address ds1
                   -> case ds1 of wild1 {
                        []
                        -> Control.Exception.Base.bracket1
                             @ GHC.IO.Handle.Types.Handle
                             @ ()
                             @ ()
                             Main.add3
                               `cast`
                             (Sym (GHC.Types.NTCo:IO[0] <GHC.IO.Handle.Types.Handle>_R))
                             GHC.IO.Handle.hClose1
                               `cast`
                             (<GHC.IO.Handle.Types.Handle>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             (\ hdl :: GHC.IO.Handle.Types.Handle[OneShot]
                                eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                              GHC.IO.Handle.Text.hPutStr2
                                hdl
                                (GHC.Base.++ @ GHC.Types.Char address Main.add2)
                                GHC.Types.False
                                eta1)
                               `cast`
                             (<GHC.IO.Handle.Types.Handle>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                             eta
                        : ipv ipv1 -> Main.$wa eta } }) -}
a802384f66492425118cd13a37472fb7
  add2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
f1b14862c14f0cb24083db61cb1648ee
  add3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.IO.Handle.Types.Handle #)
  {- Arity: 1,
     Unfolding: (GHC.IO.Handle.FD.openFile1
                   Main.fileName
                   GHC.IO.IOMode.AppendMode) -}
c8a45cd034bfcab8aec9cd422657afe9
  addLnNums :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ list1 :: GHC.Base.String ->
                 Data.OldList.unlines
                   (GHC.Base.build
                      @ [GHC.Types.Char]
                      (\ @ b1
                         c1 :: [GHC.Types.Char] -> b1 -> b1[OneShot]
                         n :: b1[OneShot] ->
                       GHC.List.foldr2
                         @ GHC.Integer.Type.Integer
                         @ [GHC.Types.Char]
                         @ b1
                         (GHC.List.zipWithFB
                            @ [GHC.Types.Char]
                            @ b1
                            @ b1
                            @ GHC.Integer.Type.Integer
                            @ [GHC.Types.Char]
                            c1
                            Main.addLnNums4)
                         n
                         Main.addLnNums1
                         (Data.OldList.lines list1)))) -}
221d07e15db0ca12af0054dc145d1838
  addLnNums1 :: [GHC.Integer.Type.Integer]
  {- Unfolding: (case GHC.Enum.$wenumDeltaInteger
                        Main.addLnNums3
                        Main.addLnNums2 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ GHC.Integer.Type.Integer ww1 ww2 }) -}
afe70d0a085cc9a8572abf3c2c5df8ad
  addLnNums2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 1) -}
bb15be4af64079030f01f85d11e922cc
  addLnNums3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
7dacf0be329f3fbf927e8c99801be822
  addLnNums4 ::
    GHC.Integer.Type.Integer -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ n :: GHC.Integer.Type.Integer
                   a :: [GHC.Types.Char][OneShot] ->
                 GHC.CString.unpackAppendCString#
                   "<"#
                   (case GHC.Show.$w$cshowsPrec1
                           0
                           n
                           (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (GHC.Types.: @ GHC.Types.Char ww3 ww4)
                      (GHC.CString.unpackAppendCString# "> "# a) })) -}
88bbbd220b872a66bcf19d4e15b64742
  deleteAt :: GHC.Types.Int -> [a] -> [a]
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a w :: GHC.Types.Int w1 :: [a] ->
                 case w of ww { GHC.Types.I# ww1 -> Main.$wdeleteAt @ a ww1 w1 }) -}
d947729776961783381e82425b6e70f1
  dispatch ::
    [([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ())
                   Main.dispatch17
                   Main.dispatch1) -}
0366bbb91e12aded2f1b8fa252f8946d
  dispatch1 ::
    [([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ())
                   Main.dispatch15
                   Main.dispatch2) -}
481b774bc458269ef041fefa2a11bd9d
  dispatch10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.IO.Handle.Types.Handle #)
  {- Arity: 1,
     Unfolding: (GHC.IO.Handle.FD.openFile1
                   Main.dispatch6
                   GHC.IO.IOMode.WriteMode) -}
a811ababe0119b80f92e4a31998dbe46
  dispatch11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "remove"#) -}
01ced99e4046d82e4e6b67c37e75aafa
  dispatch12 ::
    ([GHC.Types.Char], [GHC.Base.String] -> GHC.Types.IO ())
  {- Strictness: m,
     Unfolding: ((Main.dispatch14,
                  Main.dispatch13
                    `cast`
                  (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)))) -}
fcb3c9456df447094f1588e4a4d1dc08
  dispatch13 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ ds :: [GHC.Base.String]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds of wild {
                   [] -> Main.$wa2 eta
                   : line ds1
                   -> case ds1 of wild1 {
                        []
                        -> case GHC.IO.Handle.FD.openFile1
                                  Main.fileName
                                  GHC.IO.IOMode.ReadMode
                                  eta of ds2 { (#,#) ipv ipv1 ->
                           case GHC.IO.Handle.Text.hGetContents1
                                  ipv1
                                  ipv of ds3 { (#,#) ipv2 ipv3 ->
                           let {
                             lnLink :: GHC.Base.String
                             = case Text.Read.readEither6
                                      @ GHC.Types.Int
                                      (Text.ParserCombinators.ReadP.run
                                         @ GHC.Types.Int
                                         Main.dispatch9
                                         line) of wild2 {
                                 [] -> case Main.dispatch8 ret_ty GHC.Base.String of {}
                                 : x ds4
                                 -> case ds4 of wild3 {
                                      []
                                      -> case x of ww { GHC.Types.I# ww1 ->
                                         GHC.List.$w!!
                                           @ GHC.Base.String
                                           (Data.OldList.lines ipv3)
                                           ww1 }
                                      : ipv4 ipv5
                                      -> case Main.dispatch7 ret_ty GHC.Base.String of {} } }
                           } in
                           case System.Process.Internals.$wa
                                  System.Process.createProcess3
                                  (System.Process.Internals.ShellCommand
                                     (GHC.CString.unpackAppendCString# "google-chrome "# lnLink))
                                  (GHC.Base.Nothing @ GHC.IO.FilePath)
                                  (GHC.Base.Nothing @ [(GHC.Base.String, GHC.Base.String)])
                                  System.Process.Internals.Inherit
                                  System.Process.Internals.Inherit
                                  System.Process.Internals.Inherit
                                  GHC.Types.False
                                  GHC.Types.False
                                  GHC.Types.False
                                  ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                           case System.Process.createProcess2
                                  System.Process.Internals.Inherit
                                  ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                           case System.Process.createProcess2
                                  System.Process.Internals.Inherit
                                  ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                           case System.Process.createProcess2
                                  System.Process.Internals.Inherit
                                  ipv8 of ds7 { (#,#) ipv10 ipv11 ->
                           GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (GHC.CString.unpackAppendCString# "opened "# lnLink)
                             GHC.Types.True
                             ipv10 } } } } } }
                        : ipv ipv1 -> Main.$wa2 eta } }) -}
4a4196b3e5c67a3905636ebc0ce1dd71
  dispatch14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "open"#) -}
629244c9e5c56795601d420b7e761533
  dispatch15 ::
    ([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ())
  {- Strictness: m,
     Unfolding: ((Main.dispatch16,
                  Main.add1
                    `cast`
                  (<[[GHC.Types.Char]]>_R
                   ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)))) -}
fe0043f9abb2aeeb4069cdcd29cb8a19
  dispatch16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "add"#) -}
cb2f29d34f579e7edd19b85841056af3
  dispatch17 ::
    ([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ())
  {- Strictness: m,
     Unfolding: ((Main.dispatch21,
                  (Main.dispatch18 @ [GHC.Types.Char])
                    `cast`
                  (<[[GHC.Types.Char]]>_R
                   ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)))) -}
74f9ba38760a483845ab72f1f9befa8e
  dispatch18 ::
    [t]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ @ t
                   ds :: [t]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds of wild {
                   []
                   -> case System.Directory.doesFileExist1
                             Main.fileName
                             eta of ds1 { (#,#) ipv ipv1 ->
                      case ipv1 of wild1 {
                        GHC.Types.False
                        -> case System.IO.writeFile1
                                  Main.fileName
                                  (GHC.Types.[] @ GHC.Types.Char)
                                  ipv of ds2 { (#,#) ipv2 ipv3 ->
                           Main.dispatch20 ipv2 }
                        GHC.Types.True -> Main.dispatch20 ipv } }
                   : ipv ipv1
                   -> case Main.dispatch19
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {} }) -}
457231e489afc0b55bc97596b9de34f1
  dispatch19 :: GHC.Types.IO ()
  {- Strictness: b -}
0e130f6c77201fbfa323d7ae0c88f3a8
  dispatch2 ::
    [([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ())
                   Main.dispatch12
                   Main.dispatch3) -}
f5dd8a7fea5149bf79adc3af108daa2f
  dispatch20 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.fileName
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (Main.addLnNums ipv3)
                   GHC.Types.True
                   ipv2 } }) -}
d2a82dc0b30f5425661f1489ec2b2773
  dispatch21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "list"#) -}
181b5c27898e8f9d41f421722ca4ac62
  dispatch3 ::
    [([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ())
                   Main.dispatch4
                   (GHC.Types.[]
                      @ ([GHC.Types.Char], [[GHC.Types.Char]] -> GHC.Types.IO ()))) -}
2db4c2503f1463c2c9b63569f96df219
  dispatch4 ::
    ([GHC.Types.Char], [GHC.Base.String] -> GHC.Types.IO ())
  {- Strictness: m,
     Unfolding: ((Main.dispatch11,
                  Main.dispatch5
                    `cast`
                  (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)))) -}
3134f7c27f01719b905f1ecc16e98cbe
  dispatch5 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ ds :: [GHC.Base.String]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds of wild {
                   [] -> Main.$wa1 eta
                   : line ds1
                   -> case ds1 of wild1 {
                        []
                        -> case GHC.IO.Handle.FD.openFile1
                                  Main.fileName
                                  GHC.IO.IOMode.ReadMode
                                  eta of ds2 { (#,#) ipv ipv1 ->
                           case GHC.IO.Handle.Text.hGetContents1
                                  ipv1
                                  ipv of ds3 { (#,#) ipv2 ipv3 ->
                           case Control.Exception.Base.bracket1
                                  @ GHC.IO.Handle.Types.Handle
                                  @ ()
                                  @ ()
                                  Main.dispatch10
                                    `cast`
                                  (Sym (GHC.Types.NTCo:IO[0] <GHC.IO.Handle.Types.Handle>_R))
                                  GHC.IO.Handle.hClose1
                                    `cast`
                                  (<GHC.IO.Handle.Types.Handle>_R
                                   ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                                  (\ hdl :: GHC.IO.Handle.Types.Handle[OneShot]
                                     eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                   GHC.IO.Handle.Text.hPutStr2
                                     hdl
                                     (case Text.Read.readEither6
                                             @ GHC.Types.Int
                                             (Text.ParserCombinators.ReadP.run
                                                @ GHC.Types.Int
                                                Main.dispatch9
                                                line) of wild2 {
                                        [] -> case Main.dispatch8 ret_ty GHC.Base.String of {}
                                        : x ds4
                                        -> case ds4 of wild3 {
                                             []
                                             -> case x of ww { GHC.Types.I# ww1 ->
                                                Data.OldList.unlines
                                                  (Main.$wdeleteAt
                                                     @ GHC.Base.String
                                                     ww1
                                                     (Data.OldList.lines ipv3)) }
                                             : ipv4 ipv5
                                             -> case Main.dispatch7
                                                ret_ty GHC.Base.String
                                                of {} } })
                                     GHC.Types.False
                                     eta1)
                                    `cast`
                                  (<GHC.IO.Handle.Types.Handle>_R
                                   ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                                  ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                           case System.Posix.Files.removeLink1
                                  Main.fileName
                                  ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                           System.Directory.renameFile1
                             Main.dispatch6
                             Main.fileName
                             ipv6 } } } }
                        : ipv ipv1 -> Main.$wa1 eta } }) -}
feede2901c3ba2bf5a448479fdb54e8d
  dispatch6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "temp"#) -}
eb8a52df099e7b0b8f75e3ca3426f835
  dispatch7 :: GHC.Types.Int
  {- Strictness: b -}
7a9b194d58cec421c88d1b39b35842ff
  dispatch8 :: GHC.Types.Int
  {- Strictness: b -}
e6aaa714331a07b135e557b607779574
  dispatch9 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: ((GHC.Read.$fReadInt3
                    GHC.Read.$fReadInt_$sconvertInt
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <GHC.Types.Int>_R)
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
de5440189e5a61abd2a83c79eba52674
  fileName :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString# "webLinks"#) -}
a3d723d009122684b9072f8fe3ecc051
  list :: [t] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.dispatch18
                  `cast`
                (forall t. <[t]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
bac9775e050bbc9d1a44fd11dccff235
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
388e7e9530d5fc1f7583f752fc9988d2
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   []
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ ()
                        Main.main3
                        ipv
                   : cmd args
                   -> case GHC.List.lookup
                             @ GHC.Base.String
                             @ ([[GHC.Types.Char]] -> GHC.Types.IO ())
                             GHC.Classes.$fEq[]_$s$fEq[]1
                             cmd
                             Main.dispatch of wild1 {
                        GHC.Base.Nothing
                        -> case Main.main2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        GHC.Base.Just action
                        -> (action args) `cast` (GHC.Types.NTCo:IO[0] <()>_R) ipv } } }) -}
82c3c34a2dd4d43d0827da9f08f067c5
  main2 :: [[GHC.Types.Char]] -> GHC.Types.IO ()
  {- Strictness: b -}
a9b92f3200bc51dca4bee51a5c38f479
  main3 :: GHC.Exception.SomeException
  {- Unfolding: (GHC.IO.Exception.$fExceptionIOException_$ctoException
                   Main.main4) -}
2df691a422cde3aa5f0741d092eb652e
  main4 :: GHC.IO.Exception.IOException
  {- Unfolding: (GHC.IO.Exception.IOError
                   (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                   GHC.IO.Exception.UserError
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main5
                   (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                   (GHC.Base.Nothing @ GHC.IO.FilePath)) -}
110fdad6d3f6353af850f2a842765979
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at src/Main.hs:13:3-12"#) -}
1b4e5704909518af232d641457375aad
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
358ca95a74f0ac44962643e2aebbe1a4
  open :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.dispatch13
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
65164a07a7cc14d37cb3f70f1c768af7
  remove :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.dispatch5
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

